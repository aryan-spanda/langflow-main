# Frontend Dockerfile - Langflow React Application with NGINX
FROM node:20-alpine AS builder

# Set working directory
WORKDIR /app

# Copy package files for dependency installation
COPY src/frontend/package*.json ./

# Install dependencies
RUN npm ci

# Copy source code
COPY src/frontend/ ./

# Build the React application
RUN npm run build

# Production stage - NGINX
FROM nginx:alpine AS production

# Install wget for health checks
RUN apk add --no-cache wget

# Create non-root user for security
RUN addgroup -g 1001 -S frontend && \
    adduser -S frontend -u 1001 -G frontend

# Copy built React app from builder stage
COPY --from=builder --chown=frontend:frontend /app/build /usr/share/nginx/html

# Copy custom NGINX configuration
COPY --chown=frontend:frontend src/frontend/nginx.conf /etc/nginx/nginx.conf

# Copy startup script
COPY --chown=frontend:frontend src/frontend/start-nginx.sh /start-nginx.sh
RUN chmod +x /start-nginx.sh

# Set up NGINX directories and permissions
RUN mkdir -p /var/cache/nginx/client_temp /var/cache/nginx/proxy_temp /var/cache/nginx/fastcgi_temp /var/cache/nginx/uwsgi_temp /var/cache/nginx/scgi_temp && \
    mkdir -p /var/log/nginx && \
    chown -R frontend:frontend /var/cache/nginx && \
    chown -R frontend:frontend /var/run && \
    chown -R frontend:frontend /etc/nginx && \
    chown -R frontend:frontend /usr/share/nginx/html && \
    chown -R frontend:frontend /var/log/nginx && \
    touch /var/log/nginx/access.log /var/log/nginx/error.log /tmp/nginx.pid && \
    chown frontend:frontend /var/log/nginx/access.log /var/log/nginx/error.log /tmp/nginx.pid

# Switch to non-root user
USER frontend

# Expose port
EXPOSE 3000

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=5s --retries=3 \
  CMD wget --no-verbose --tries=1 --spider http://localhost:3000/health || exit 1

# Environment variables
ENV BACKEND_URL=""
ENV VITE_API_URL=""
ENV VITE_WS_URL=""

# Start NGINX with custom script
CMD ["/start-nginx.sh"]